<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Soulful.Wpf.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MaterialDesignTabControl"
           TargetType="{x:Type TabControl}">
        <Setter Property="local:TabControlAssist.TabHeaderAlignment" Value="Left"/>
        <Setter Property="local:TabControlAssist.TabHeaderHighlightBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="local:TabControlAssist.TabHeaderForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="local:TabControlAssist.TabHeaderInactiveBrush" Value="{DynamicResource MaterialDesignBodyLight}"/>
        <Setter Property="local:TabControlAssist.TabHeaderInactiveOpacity" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="OnSelected">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="clickBorder"
                                                                               Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                          Value="0.12">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CircleEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.35"
                                                                            Value="0.12"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                                                          Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="clickBorder"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0"
                                                                          Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                          Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="clickBorder"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0"
                                                                          Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                          Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0"
                                                                          Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                          Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="OnDeselected">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0"
                                                                          Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15"
                                                                          Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid MinWidth="90"
                                              MinHeight="48"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Background="{TemplateBinding Background}">
                                            <Border x:Name="clickBorder"
                                                    Background="{Binding Path=(local:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                    Opacity="0"
                                                    RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                            </Border>
                                            <!-- TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" -->
                                            <!-- TextBlock.Foreground="{Binding Path=(local:TabControlAssist.TabHeaderForeground), RelativeSource={RelativeSource TemplatedParent}}" -->
                                            <ContentPresenter x:Name="headerContent"
                                                              Margin="24,12,24,12"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Header"
                                                              RecognizesAccessKey="True"
                                                              TextBlock.FontSize="14"
                                                              TextBlock.FontWeight="Medium"
                                                              TextBlock.Foreground="{Binding Path=(local:TabControlAssist.TabHeaderForeground), RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter.Style>
                                                    <Style TargetType="ContentPresenter">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         Value="False">
                                                                <Setter Property="Opacity" Value="{Binding Path=(local:TabControlAssist.TabHeaderInactiveOpacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         Value="True">
                                                                <Setter Property="Opacity" Value="1"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentPresenter.Style>
                                            </ContentPresenter>
                                            <!-- Background="{Binding Path=(local:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" -->
                                            <!-- Background="{DynamicResource SecondaryAccentBrush}" -->
                                            <Border x:Name="border"
                                                    Height="2"
                                                    Padding="8"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Bottom"
                                                    Background="{Binding Path=(local:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                    RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="local:TabControlAssist.TabHeaderForeground" Value="{Binding Path=(local:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"/>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource OnSelected}"/>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource OnDeselected}"/>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter Property="local:TabControlAssist.TabHeaderForeground" Value="{Binding Path=(local:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.23"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"/>
                        <Border HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="{Binding Path=(local:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                BorderThickness="0,0,0,1"
                                Opacity="0.12"/>
                        <Border HorizontalAlignment="Stretch"
                                Background="Transparent">
                            <UniformGrid x:Name="HeaderPanel"
                                         HorizontalAlignment="{Binding Path=(local:TabControlAssist.TabHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                         Panel.ZIndex="1"
                                         Background="Transparent"
                                         FlowDirection="LeftToRight"
                                         IsItemsHost="True"
                                         KeyboardNavigation.TabIndex="1"
                                         Rows="1"/>
                        </Border>
                        <Border Grid.Row="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignTabControl}"
           TargetType="{x:Type TabControl}"/>
</ResourceDictionary>